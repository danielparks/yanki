[project]
name = "yanki"
version = "0.1.0"
description = "Build Anki decks from text files containing YouTube URLs."
authors = [{name = "Daniel Parks", email = "dp+git@oxidized.org"}]
readme = "README.md"
requires-python = ">= 3.11"
dependencies = [
    "yt-dlp >=2024.11.4",
    "genanki >=0.13.1,<0.14",
    "docutils >=0.21.2,<0.22",
    "ffmpeg-python >=0.2.0,<0.3",
    "colorlog >=6.9.0,<7.0",
    "click >=8.1.8,<9.0",
    "mistletoe>=1.4.0",
]

[dependency-groups]
dev = [
    "pytest~=8.3",
    "ruff>0.8.4",
    "pre-commit>=4.0.1,<5",
    "pytest-console-scripts>=1.4.1,<2",
    "psutil>=6.1.1,<7",
]

[project.scripts]
yanki = "yanki.cli:main"

[tool.pytest.ini_options]
log_cli_level = "DEBUG"

[tool.ruff]
line-length = 80

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
preview = true
select = ["ALL"]
ignore = [
    "A",        # I don’t mind shadowing built-ins.
    "B019",     # FIXME: `functools.cache` can leak memory.
    "COM812",   # Conflicts with formatter.
    "D1",       # FIXME: Undocumented public items.
    "DOC",      # FIXME: Undocumented returns, raises, etc.
    "EM",       # I don’t like the `msg = ...; raise Error(msg)` syntax.
    "FIX",      # I like FIXME comments for low-priority stuff.
    "PLC1901",  # Explicit comparisons to `""` are often clearer.
    "PLR0904",  # FIXME? Too many public methods.
    "PLR0911",  # I don’t care about too many returns.
    "PLR2004",  # “Magic” values often easier to understand without a CONSTANT.
    "PLR6301",  # Too many false positive (methods that don’t need `self`).
    "PLW2901",  # I like to shadow `for` loop variables.
    "S404",     # I use `subprocess`.
    "S603",     # This seems to trigger on all calls to `subprocess.run`.
    "T20",      # We use `print()`.
    "TD",       # I prefer my FIXME format.
    "TRY003",   # It’s a lot more work to have separate error classes.
    "UP015",    # I prefer to be explicit about opening files for reading.

    # I frequently use characters that trigger these lints like "’"  and "❯":
    "RUF001", "RUF002", "RUF003",

    # Rule groups to fix or document:
    "ANN",
    "ARG",
    "BLE",
    "C90",
    "CPY",
    "FBT",
    "FLY",
    "G",
    "LOG",
    "PT",
    "PTH",
    "SIM",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
  "INP001", # Don't care about implicit namespace in tests.
  "S101",   # assert is fine in tests.
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.hatch.build.targets.wheel]
packages = ["yanki"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
